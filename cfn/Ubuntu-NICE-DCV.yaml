AWSTemplateFormatVersion: 2010-09-09
Description: Ubuntu with NICE DCV (login as ubuntu)

Metadata:
  License:
    Description: >
      Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
      SPDX-License-Identifier: MIT-0

      Permission is hereby granted, free of charge, to any person obtaining a copy of this
      software and associated documentation files (the "Software"), to deal in the Software
      without restriction, including without limitation the rights to use, copy, modify,
      merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Ubuntu version
        Parameters:
          - ubuntuVersion
      - Label:
          default: EC2 configuration
        Parameters:
          - ec2Name
          - ec2KeyPair
          - instanceType
      - Label:
          default: Network configuration
        Parameters:
          - vpcID
          - subnetID
          - displayPublicIP
          - assignStaticIP
      - Label:
          default: Allowed source IP
        Parameters:
          - ingressIPv4
          - ingressIPv6
      - Label:
          default: EBS volume configuration
        Parameters:
          - volumeSize
          - volumeType
      - Label:
          default: NICE DCV configuration
        Parameters:
          - listenPort

Parameters:
  ubuntuVersion:
    Type: String
    Description: Version and processor architecture
    AllowedValues:
      - Ubuntu 22.04 (arm64)
      - Ubuntu 22.04 (x86_64)
      - Ubuntu 20.04 (x86_64)
      - Ubuntu 18.04 (arm64)
      - Ubuntu 18.04 (x86_64)
      - Ubuntu Pro 22.04 (arm64)
      - Ubuntu Pro 22.04 (x86_64)
      - Ubuntu Pro 20.04 (x86_64)
      - Ubuntu Pro 18.04 (arm64)
      - Ubuntu Pro 18.04 (x86_64)
    Default: Ubuntu 22.04 (arm64)
  instanceType:
    Type: String
    Description: Instance type (x86_64 or arm64) ( https://console.aws.amazon.com/ec2/#InstanceTypes )
    Default: t4g.medium

  ec2Name:
    Type: String
    Description: EC2 instance name
    Default: Ubuntu-NICE-DCV
  ec2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Key Pair ( https://console.aws.amazon.com/ec2/#KeyPairs )"
    ConstraintDescription: Specify a key pair
    AllowedPattern: ".+"

  vpcID:
    Type: AWS::EC2::VPC::Id
    Description: "VPC with internet connectivity ( https://console.aws.amazon.com/vpcconsole/home#vpcs: )"
    ConstraintDescription: Specify a valid value
    AllowedPattern: ".+"
  subnetID:
    Type: AWS::EC2::Subnet::Id
    Description: "Subnet with internet connectivity ( https://console.aws.amazon.com/vpcconsole/home#subnets: )"
    ConstraintDescription: Specify a valid value
    AllowedPattern: ".+"
  displayPublicIP:
    Type: String
    Description: Display EC2 public IP in CloudFormation Outputs (select No if EC2 has no public IP)
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  assignStaticIP:
    Type: String
    Description: Associate static public IPv4 address ( https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html )
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"

  ingressIPv4:
    Type: String
    Description: Allowed source prefix (IPv4) ( e.g. 1.2.3.4/32, get your source IP from https://checkip.amazonaws.com )
    Default: 0.0.0.0/0
  ingressIPv6:
    Type: String
    Description: Allowed source prefix (IPv6) ( https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#ipv6-addressing )
    Default: ::/0

  listenPort:
    Type: Number
    Description: NICE DCV server TCP/UDP port
    MinValue: 1024
    MaxValue: 65535
    Default: 8443

  volumeSize:
    Type: Number
    Description: Volume size in GiB
    MinValue: 10
    MaxValue: 16384
    Default: 10
  volumeType:
    Type: String
    Description: EBS volume type
    AllowedValues:
      - "gp3"
      - "gp2"
    Default: "gp3"

Conditions:
  useElasticIP: !Equals [!Ref assignStaticIP, "Yes"]
  useUbuntu2204x86: !Equals [!Ref ubuntuVersion, "Ubuntu 22.04 (x86_64)"]
  useUbuntu2204arm64: !Equals [!Ref ubuntuVersion, "Ubuntu 22.04 (arm64)"]
  useUbuntu2004x86: !Equals [!Ref ubuntuVersion, "Ubuntu 20.04 (x86_64)"]
  useUbuntu1804x86: !Equals [!Ref ubuntuVersion, "Ubuntu 18.04 (x86_64)"]
  useUbuntu1804arm64: !Equals [!Ref ubuntuVersion, "Ubuntu 18.04 (arm64)"]
  useUbuntuPro2204x86: !Equals [!Ref ubuntuVersion, "Ubuntu Pro 22.04 (x86_64)"]
  useUbuntuPro2204arm64:
    !Equals [!Ref ubuntuVersion, "Ubuntu Pro 22.04 (arm64)"]
  useUbuntuPro2004x86: !Equals [!Ref ubuntuVersion, "Ubuntu Pro 20.04 (x86_64)"]
  useUbuntuPro1804x86: !Equals [!Ref ubuntuVersion, "Ubuntu Pro 18.04 (x86_64)"]
  displayPublicIP: !Equals [!Ref displayPublicIP, "Yes"]

Resources:
  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound DCV
      VpcId: !Ref vpcID
      SecurityGroupIngress:
        - Description: SSH (IPv4)
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref ingressIPv4
        - Description: SSH (IPv6)
          IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIpv6: !Ref ingressIPv6
        - Description: NICE DCV (IPv4)
          IpProtocol: "tcp"
          FromPort: !Ref listenPort
          ToPort: !Ref listenPort
          CidrIp: !Ref ingressIPv4
        - Description: NICE DCV (IPv6)
          IpProtocol: "tcp"
          FromPort: !Ref listenPort
          ToPort: !Ref listenPort
          CidrIpv6: !Ref ingressIPv6
        - Description: NICE DCV QUIC (IPv4)
          IpProtocol: "udp"
          FromPort: !Ref listenPort
          ToPort: !Ref listenPort
          CidrIp: !Ref ingressIPv4
        - Description: NICE DCV QUIC (IPv6)
          IpProtocol: "udp"
          FromPort: !Ref listenPort
          ToPort: !Ref listenPort
          CidrIpv6: !Ref ingressIPv6
      SecurityGroupEgress:
        - Description: Allow all outbound traffic (IPv4)
          IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
        - Description: Allow all outbound traffic (IPv6)
          IpProtocol: "-1"
          CidrIpv6: ::/0
      Tags:
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: Name
          Value: !Sub "[${AWS::StackName}] - ${ec2Name}"
        - Key: GitHub
          Value: https://github.com/aws-samples/amazon-ec2-nice-dcv-samples

  instanceIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies: # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-license.html
        - PolicyName: dcvLicensing
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:${AWS::Partition}:s3:::dcv-license.${AWS::Region}/*"
        - PolicyName: gpuDrivers
          PolicyDocument: # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-nvidia-driver.html https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-amd-driver.html
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::nvidia-gaming"
                  - !Sub "arn:${AWS::Partition}:s3:::nvidia-gaming/*"
                  - !Sub "arn:${AWS::Partition}:s3:::ec2-linux-nvidia-drivers"
                  - !Sub "arn:${AWS::Partition}:s3:::ec2-linux-nvidia-drivers/*"
                  - !Sub "arn:${AWS::Partition}:s3:::ec2-amd-linux-drivers"
                  - !Sub "arn:${AWS::Partition}:s3:::ec2-amd-linux-drivers/*"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
      Tags:
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: GitHub
          Value: https://github.com/aws-samples/amazon-ec2-nice-dcv-samples

  instanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref instanceIamRole

  ec2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT90M
    Metadata:
      Comment: Install Update files
      AWS::CloudFormation::Init:
        configSets:
          setup:
            - 00_setup
        00_setup: # in the following order: packages, groups, users, sources, files, commands, and then services.
          files:
            "/home/ubuntu/update-dcv":
              content: |
                #!/bin/bash
                cd /tmp
                sudo dcv close-session ubuntu
                if ((uname -a | grep -q x86) && (cat /etc/os-release | grep -q 22.04)); then
                  rm -f /tmp/nice-dcv-ubuntu2204-x86_64.tgz
                  wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-x86_64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
                elif ((uname -a | grep -q aarch) && (cat /etc/os-release | grep -q 22.04)); then
                  rm -f /tmp/nice-dcv-ubuntu2204-aarch64.tgz
                  wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-aarch64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-aarch64
                else
                  rm -f nice-dcv-ubuntu2004-x86_64.tgz
                  wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2004-x86_64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
                fi
                sudo systemctl stop dcvserver dcv-virtual-session
                sudo apt-get install -y ./nice-dcv-server_*.deb
                sudo apt-get install -y ./nice-dcv-web-viewer_*.deb
                sudo usermod -aG video dcv
                sudo apt-get install -y ./nice-xdcv_*.deb
                sudo systemctl restart dcvserver dcv-virtual-session
              mode: "000755"
              owner: "ubuntu"
              group: "ubuntu"
            "/home/ubuntu/update-awscli":
              content: |
                #!/bin/bash
                cd /tmp
                rm -f awscliv2.zip
                if (uname -a | grep -q x86); then
                  curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
                else
                  curl https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip -o awscliv2.zip
                fi
                unzip -q -o awscliv2.zip
                sudo ./aws/install --update -b /usr/bin
              mode: "000755"
              owner: "ubuntu"
              group: "ubuntu"
            "/etc/systemd/system/dcv-virtual-session.service":
              content: |
                [Unit]
                Description=Create DCV virtual session
                After=default.target network.target

                [Service]
                ExecStart=/opt/dcv-virtual-session.sh

                [Install]
                WantedBy=default.target
              mode: "000644"
              owner: "root"
              group: "root"
            "/opt/dcv-virtual-session.sh":
              content: |
                #!/bin/bash
                dcvUser=ubuntu
                while true;
                do
                  if (/usr/bin/dcv list-sessions | grep -q $dcvUser); then
                    sleep 5
                  else
                    /usr/bin/dcv create-session $dcvUser --owner $dcvUser --storage-root /home/$dcvUser
                    /usr/bin/dcv list-sessions
                  fi
                done
              mode: "000755"
              owner: "root"
              group: "root"
            "/home/ubuntu/configure-gnome":
              content: |
                #!/bin/bash
                gnome-extensions enable ubuntu-dock@ubuntu.com
                XDG_CURRENT_DESKTOP=ubuntu:GNOME gnome-control-center&
              mode: "000755"
              owner: "root"
              group: "root"
            "/home/ubuntu/download-NVIDIA-GRID-driver":
              content: |
                #!/bin/bash
                clear
                echo  
                echo    NOTICE: These downloads are for GPU instances and are available to AWS customers only
                echo  
                echo By downloading, you agree to conditions and are bound by license terms as stated on 
                echo    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-nvidia-driver.html
                echo 
                mkdir -p /home/ubuntu/Downloads/Drivers                
                cd /home/ubuntu/Downloads/Drivers
                pwd
                sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
                sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1                
                aws s3 cp --recursive s3://ec2-linux-nvidia-drivers/latest/ .
                sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
                sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0
                chmod +x /home/ec2-user/Downloads/Drivers/*.run
              mode: "000755"
              owner: "ubuntu"
              group: "ubuntu"
            "/home/ubuntu/download-NVIDIA-Gaming-driver":
              content: |
                #!/bin/bash
                clear
                echo  
                echo    NOTICE: These downloads are for GPU instances and are available to AWS customers only
                echo  
                echo By downloading, you agree to conditions and are bound by license terms as stated on 
                echo    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-nvidia-driver.html
                echo 
                mkdir -p /home/ubuntu/Downloads/Drivers
                cd /home/ubuntu/Downloads/Drivers
                pwd
                sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
                sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
                aws s3 cp --recursive s3://nvidia-gaming/linux/latest/ .
                sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
                sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0
                sudo mkdir -p /etc/nvidia
                sudo curl -o /etc/nvidia/GridSwCert.txt "https://nvidia-gaming.s3.amazonaws.com/GridSwCert-Archive/GridSwCertLinux_2021_10_2.cert"
                EoF
              mode: "000755"
              owner: "ubuntu"
              group: "ubuntu"
            "/home/ubuntu/download-AMD-driver":
              content: |
                #!/bin/bash
                clear
                echo  
                echo    NOTICE: These downloads are for GPU instances and are available to AWS customers only
                echo  
                echo By downloading, you agree to conditions and are bound by license terms as stated on 
                echo    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-amd-driver.html
                echo 
                mkdir -p /home/ubuntu/Downloads/Drivers
                cd /home/ubuntu/Downloads/Drivers
                pwd
                sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1
                sudo sysctl -w net.ipv6.conf.default.disable_ipv6=1
                aws s3 cp --recursive s3://ec2-amd-linux-drivers/latest/ .
                sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
                sudo sysctl -w net.ipv6.conf.default.disable_ipv6=0
                cat << EOF > /home/ubuntu/Downloads/Drivers/amd-xorg.conf
                Section "ServerLayout"
                    Identifier     "Layout0"
                    Screen          0 "Screen0"
                    InputDevice     "Keyboard0" "CoreKeyboard"
                    InputDevice     "Mouse0" "CorePointer"
                EndSection
                Section "Files"
                    ModulePath "/opt/amdgpu/lib64/xorg/modules/drivers"
                    ModulePath "/opt/amdgpu/lib/xorg/modules"
                    ModulePath "/opt/amdgpu-pro/lib/xorg/modules/extensions"
                    ModulePath "/opt/amdgpu-pro/lib64/xorg/modules/extensions"
                    ModulePath "/usr/lib64/xorg/modules"
                    ModulePath "/usr/lib/xorg/modules"
                EndSection
                Section "InputDevice"
                    # generated from default
                    Identifier     "Mouse0"
                    Driver         "mouse"
                    Option         "Protocol" "auto"
                    Option         "Device" "/dev/psaux"
                    Option         "Emulate3Buttons" "no"
                    Option         "ZAxisMapping" "4 5"
                EndSection
                Section "InputDevice"
                    # generated from default
                    Identifier     "Keyboard0"
                    Driver         "kbd"
                EndSection
                Section "Monitor"
                    Identifier     "Monitor0"
                    VendorName     "Unknown"
                    ModelName      "Unknown"
                EndSection
                Section "Device"
                    Identifier     "Device0"
                    Driver         "amdgpu"
                    VendorName     "AMD"
                    BoardName      "Radeon MxGPU V520"
                    BusID          "PCI:0:30:0"
                EndSection
                Section "Extensions"
                    Option         "DPMS" "Disable"
                EndSection
                Section "Screen"
                    Identifier     "Screen0"
                    Device         "Device0"
                    Monitor        "Monitor0"
                    DefaultDepth   24
                    Option         "AllowEmptyInitialConfiguration" "True"
                    SubSection "Display"
                        Virtual    3840 2160
                        Depth      32
                    EndSubSection
                EndSection
                EOF
              mode: "000755"
              owner: "ubuntu"
              group: "ubuntu"
    Properties:
      ImageId: # https://ubuntu.com/server/docs/cloud-images/amazon-ec2 https://ubuntu.com/blog/ubuntu-pro-is-now-part-of-the-aws-ec2-console
        !If [
          useUbuntu2204x86,
          "{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}",
          !If [
            useUbuntu2204arm64,
            "{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}",
            !If [
              useUbuntu2004x86,
              "{{resolve:ssm:/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}",
              !If [
                useUbuntu1804x86,
                "{{resolve:ssm:/aws/service/canonical/ubuntu/server/18.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}",
                !If [
                  useUbuntu1804arm64,
                  "{{resolve:ssm:/aws/service/canonical/ubuntu/server/18.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}",
                  !If [
                    useUbuntuPro2204x86,
                    "{{resolve:ssm:/aws/service/canonical/ubuntu/pro-server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}",
                    !If [
                      useUbuntuPro2204arm64,
                      "{{resolve:ssm:/aws/service/canonical/ubuntu/pro-server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}",
                      !If [
                        useUbuntuPro2004x86,
                        "{{resolve:ssm:/aws/service/canonical/ubuntu/pro-server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}",
                        !If [
                          useUbuntuPro1804x86,
                          "{{resolve:ssm:/aws/service/canonical/ubuntu/pro-server/18.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}",
                          "{{resolve:ssm:/aws/service/canonical/ubuntu/pro-server/18.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}",
                        ],
                      ],
                    ],
                  ],
                ],
              ],
            ],
          ],
        ]
      InstanceType: !Ref instanceType
      IamInstanceProfile: !Ref instanceProfile
      KeyName: !Ref ec2KeyPair
      SubnetId: !Ref subnetID
      Monitoring: true
      SecurityGroupIds:
        - !Ref securityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: !Ref volumeType
            VolumeSize: !Ref volumeSize
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /tmp/cfn
          cd /tmp/cfn

          # disable IPv6 during setup
          sysctl -w net.ipv6.conf.all.disable_ipv6=1
          sysctl -w net.ipv6.conf.default.disable_ipv6=1

          # https://stackoverflow.com/questions/33370297/apt-get-update-non-interactive
          export DEBIAN_FRONTEND=noninteractive

          apt-get -q update
          # https://docs.aws.amazon.com/systems-manager/latest/userguide/agent-install-ubuntu.html#agent-install-ubuntu-tabs
          # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-set-up.html Note: SSH inbound required in SG
          if (cat /etc/os-release | grep -q 18.04); then
            apt-get -q -y install ec2-instance-connect
          fi

          apt-get install -q -y python-setuptools wget tmux unzip tar curl sed
          # CfN scripts: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/releasehistory-aws-cfn-bootstrap.html#releasehistory-aws-cfn-bootstrap-v1
          wget -4 -nv https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-1.4-34.tar.gz
          tar -xf aws-cfn-bootstrap-1.4-34.tar.gz
          cd aws-cfn-bootstrap-1.4
          python2 setup.py build
          python2 setup.py install
          cd /tmp/cfn

          # cfn-init
          python2 /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region} -c setup

          # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-prereq.html
          systemctl isolate multi-user.target

          if (cat /etc/os-release | grep -q 18.04); then
            apt-get -q -y install ubuntu-desktop
          else
            apt-get -q -y install ubuntu-desktop-minimal 
          fi
          apt-get -q -y install gdm3
          apt-get -q -y install pulseaudio-utils gnome-tweaks gnome-shell-extension-ubuntu-dock

          sed -i "s/^#WaylandEnable=false/WaylandEnable=false/g" /etc/gdm3/custom.conf

          # resolve "/var/lib/dpkg/info/nice-dcv-server.postinst: 8: dpkg-architecture: not found" when installing dcv-server
          apt-get -q -y install dpkg-dev

          # NICE DCV: https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-server.html
          wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY
          gpg --import NICE-GPG-KEY
          if ((uname -a | grep -q x86) && (cat /etc/os-release | grep -q 22.04)); then
            wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-x86_64.tgz
            tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
          elif ((uname -a | grep -q aarch) && (cat /etc/os-release | grep -q 22.04)); then
            wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-aarch64.tgz
            tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-aarch64
          elif ((uname -a | grep -q x86) && (cat /etc/os-release | grep -q 18.04)); then
            rm -f /home/ubuntu/update-dcv
            wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/2023.0/Servers/nice-dcv-2023.0-15487-ubuntu1804-x86_64.tgz
            tar -xvzf nice-dcv-*-x86_64.tgz && cd nice-dcv-*-x86_64
          elif (cat /etc/os-release | grep -q 18.04); then
            rm -f /home/ubuntu/update-dcv
            wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/2023.0/Servers/nice-dcv-2023.0-15487-ubuntu1804-aarch64.tgz
            tar -xvzf nice-dcv-*-aarch64.tgz && cd nice-dcv-*-aarch64
          else
            wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2004-x86_64.tgz
            tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
          fi
          apt-get -q -y install ./nice-dcv-server_*.deb
          apt-get -q -y install ./nice-dcv-web-viewer_*.deb
          usermod -aG video dcv
          apt-get -q -y install ./nice-xdcv_*.deb

          # QUIC: https://docs.aws.amazon.com/dcv/latest/adminguide/enable-quic.html
          cp /etc/dcv/dcv.conf /etc/dcv/dcv.conf."`date +"%Y-%m-%d"`"
          sed -i "s/^#enable-quic-frontend=true/enable-quic-frontend=true/g" /etc/dcv/dcv.conf

          # Virtual session daemon: https://docs.aws.amazon.com/dcv/latest/adminguide/managing-sessions-start.html#managing-sessions-start-manual

          # Listen port: https://docs.aws.amazon.com/dcv/latest/adminguide/manage-port-addr.html
          sed -i "/^web-port=/d" /etc/dcv/dcv.conf
          sed -i "/^quic-port=/d" /etc/dcv/dcv.conf
          sed -i "/^\[connectivity\]/a web-port=${listenPort}" /etc/dcv/dcv.conf
          sed -i "/^\[connectivity\]/a quic-port=${listenPort}" /etc/dcv/dcv.conf

          # remove AWSCLI version 1
          apt-get -q -y remove awscli

          cd /tmp/cfn
          # AWS CLI v2: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
          if (uname -a | grep -q x86); then
            curl -s https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
          else
            curl -s https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip -o awscliv2.zip
          fi
          unzip -q -o awscliv2.zip
          ./aws/install -b /usr/bin
          echo "export AWS_CLI_AUTO_PROMPT=on-partial" >> /home/ubuntu/.bashrc

          # DCV update script
          # AWS CLI update script

          # Update OS
          apt-get -q update
          apt-get -q -y upgrade
          apt-get -y autoremove

          # text console: DCV virtual sessions only
          systemctl isolate multi-user.target
          systemctl set-default multi-user.target
          systemctl daemon-reload

          # cfn-init completed so signal success or not
          python2 /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region}

          # enable back IPv6
          sysctl -w net.ipv6.conf.all.disable_ipv6=0
          sysctl -w net.ipv6.conf.default.disable_ipv6=0

          systemctl enable --now dcvserver dcv-virtual-session.service

          sleep 1 && reboot
      Tags:
        - Key: Name
          Value: !Ref ec2Name
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: GitHub
          Value: https://github.com/aws-samples/amazon-ec2-nice-dcv-samples

  elasticIP:
    Condition: useElasticIP
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      NetworkBorderGroup: !Ref AWS::Region
      InstanceId: !Ref ec2Instance
      Tags:
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: Name
          Value: !Sub "[${AWS::StackName}] - ${ec2Name}"
        - Key: GitHub
          Value: https://github.com/aws-samples/amazon-ec2-nice-dcv-samples

Outputs:
  EC2console:
    Description: EC2 instance console
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/ec2/home?region=${AWS::Region}#Instances:search=${ec2Instance}"

  SSMsessionManager:
    Description: SSM Session Manager login ("sudo passwd ubuntu" to change password)
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/systems-manager/session-manager/${ec2Instance}"

  DCVwebConsole:
    Description: NICE DCV web browser client (login as ubuntu)
    Value: !Sub
      - "https://${IpAddress}:${listenPort}"
      - IpAddress:
          !If [
            displayPublicIP,
            !GetAtt ec2Instance.PublicIp,
            !GetAtt ec2Instance.PrivateIp,
          ]
