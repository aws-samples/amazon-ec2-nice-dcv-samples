AWSTemplateFormatVersion: 2010-09-09
Description: Ubuntu with NICE DCV (login as ubuntu)

Metadata:
  License:
    Description: >
      Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
      SPDX-License-Identifier: MIT-0
      
      Permission is hereby granted, free of charge, to any person obtaining a copy of this
      software and associated documentation files (the "Software"), to deal in the Software
      without restriction, including without limitation the rights to use, copy, modify,
      merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so.
      
      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      -
        Label:
          default: Ubuntu version and instance type
        Parameters:
          - ubuntuVersion
          - instanceType
      -
        Label:
          default: EC2 configuration
        Parameters:
          - ec2Name
          - keyName
          - vpcID
          - subnetID
      -
        Label:
          default: Allowed inbound source IP prefixes to NICE DCV port 8443
        Parameters:
          - ingressIPv4
          - ingressIPv6
      -
        Label:
          default: EBS volume configuration
        Parameters:
          - volumeSize
          - volumeType
          - deviceName
      -
        Label:
          default: Ubuntu AMI IDs
        Parameters:
          - ubuntu2204amd64
          - ubuntu2004amd64
          - ubuntu1804arm64
          - ubuntu1804amd64

Conditions:
  useUbuntu2204amd64: !Equals [ !Ref ubuntuVersion, "Ubuntu 22.04 (x86_64)"]
  useUbuntu2004amd64: !Equals [ !Ref ubuntuVersion, "Ubuntu 20.04 (x86_64)"]
  useUbuntu1804amd64: !Equals [ !Ref ubuntuVersion, "Ubuntu 18.04 (x86_64)"]

Parameters:
  instanceType:
    Type: String
    Description: Instance Type (x86_64 or arm64) (see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html )
    Default: t3.medium
  ubuntuVersion:
    Type: String
    Description: Select appropriate Graviton instanceType (e.g. tg4.medium ) if using ARCH64 Ubuntu
    AllowedValues:
      - Ubuntu 22.04 (x86_64)
      - Ubuntu 20.04 (x86_64)
      - Ubuntu 18.04 (x86_64)
      - Ubuntu 18.04 (aarch64)
    Default: Ubuntu 22.04 (x86_64)

  ec2Name:
    Description: EC2 instance name
    Type: String
    Default: Ubuntu-NICE-DCV
  keyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key pair for accessing EC2 instance (Create one at https://console.aws.amazon.com/ec2/#KeyPairs if necessary)
    ConstraintDescription: Do specify a valid value
    AllowedPattern: ".+"    
  vpcID:
    Type: AWS::EC2::VPC::Id
    Description: VPC with internet connectivity
    ConstraintDescription: Do specify a valid value
    AllowedPattern: ".+"    
  subnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet with internet connectivity
    ConstraintDescription: Do specify a valid value
    AllowedPattern: ".+"    

  ingressIPv4:
    Type: String
    Description: Allowed source prefix (IPv4)
    Default: 0.0.0.0/0
  ingressIPv6:
    Type: String
    Description: Allowed source prefix (IPv6)
    Default: ::/0

  volumeType:
    Type: String
    Description: Volume Type ( https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html )
    AllowedValues:
      - gp2
      - gp3
    Default: gp3
  volumeSize:
    Type: Number
    Description: Volume Size in GiBs (must be equal or larger than snapshot size)
    Default: 8
  deviceName:
    Type: String
    Description: Device Name
    Default: /dev/sda1

  # https://ubuntu.com/server/docs/cloud-images/amazon-ec2
  ubuntu2204amd64:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>  
    Description: Ubuntu 22.04 (x86_64)
    Default: /aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id
  ubuntu2004amd64:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>  
    Description: Ubuntu 20.04 (x86_64)
    Default: /aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id
  ubuntu1804amd64:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>  
    Description: Ubuntu 18.04 (x86_64) 
    Default: /aws/service/canonical/ubuntu/server/18.04/stable/current/amd64/hvm/ebs-gp2/ami-id
  ubuntu1804arm64:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>  
    Description: Ubuntu 18.04 (aarch64) 
    Default: /aws/service/canonical/ubuntu/server/18.04/stable/current/arm64/hvm/ebs-gp2/ami-id

Resources:
  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound DCV 
      VpcId: !Ref vpcID
      SecurityGroupIngress:
        - Description: NICE DCV (IPv4)
          IpProtocol: "tcp"
          FromPort: "8443"
          ToPort: "8443"
          CidrIp: !Ref ingressIPv4
        - Description: NICE DCV QUIC (IPv4)
          IpProtocol: "udp"
          FromPort: "8443"
          ToPort: "8443"
          CidrIp: !Ref ingressIPv4
        - Description: NICE DCV (IPv6)
          IpProtocol: "tcp"
          FromPort: "8443"
          ToPort: "8443"
          CidrIpv6: !Ref ingressIPv6
        - Description: NICE DCV QUIC (IPv6)
          IpProtocol: "udp"
          FromPort: "8443"
          ToPort: "8443"
          CidrIpv6: !Ref ingressIPv6
      Tags:
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}
        - Key: Name
          Value: !Sub "[${AWS::StackName}] - ${ec2Name}"

  instanceIamRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies: # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-license.html
      - PolicyName: dcvLicensing
        PolicyDocument:
          Version: '2012-10-17'  
          Statement:
          - Effect: Allow
            Action: 
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::dcv-license.${AWS::Region}/*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}

  instanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: /
      Roles: 
      - !Ref instanceIamRole

  ec2Instance:
    Type: "AWS::EC2::Instance" 
    CreationPolicy:
      ResourceSignal:
        Timeout: PT90M      
    Metadata:
      Comment: Install Desktop Environment    
      AWS::CloudFormation::Init:
        configSets:
          setup:
            - 00_setup       
        00_setup:  # in the following order: packages, groups, users, sources, files, commands, and then services.
          files:
            "/home/ubuntu/update-dcv": 
              content: |
                #!/bin/bash
                cd /tmp 
                if ((uname -a | grep x86 1>/dev/null) && (cat /etc/os-release | grep 22.04 1>/dev/null)); then
                  rm -f /tmp/nice-dcv-ubuntu1804-x86_64.tgz
                  wget https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-x86_64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64             
                elif ((uname -a | grep x86 1>/dev/null) && (cat /etc/os-release | grep 18.04 1>/dev/null)); then
                  rm -f /tmp/nice-dcv-ubuntu1804-x86_64.tgz
                  wget https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu1804-x86_64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
                elif (cat /etc/os-release | grep 18.04 1>/dev/null); then
                  rm -f /tmp/nice-dcv-ubuntu1804-aarch64.tgz
                  wget https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu1804-aarch64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-aarch64
                else
                  rm -f /tmp/nice-dcv-ubuntu2004-x86_64.tgz
                  wget https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2004-x86_64.tgz
                  tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64  
                fi                                     
                sudo apt-get install -y ./nice-dcv-server_*.deb 
                sudo apt-get install -y ./nice-dcv-web-viewer_*.deb 
                sudo apt-get install -y ./nice-xdcv_*.deb 
              mode: "000755"
              owner: "ubuntu"
              group: "users"
            "/home/ubuntu/update-awscli": 
              content: |
                #!/bin/bash
                cd /tmp
                rm -f /tmp/awscliv2.zip
                if (uname -a | grep x86 1>/dev/null); then
                  curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
                else
                  curl https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip -o awscliv2.zip
                fi
                unzip -q -o awscliv2.zip
                sudo ./aws/install --update -b /usr/bin              
              mode: "000755"
              owner: "ubuntu"
              group: "users"
    Properties:
      KeyName: !Ref keyName
      ImageId: !If [useUbuntu2204amd64, !Ref ubuntu2204amd64, !If [useUbuntu2004amd64, !Ref ubuntu2004amd64, !If [useUbuntu1804amd64, !Ref ubuntu1804amd64, !Ref ubuntu1804arm64] ]]
      InstanceType: !Ref instanceType
      IamInstanceProfile: !Ref instanceProfile
      SubnetId: !Ref subnetID  
      Monitoring: true      
      SecurityGroupIds: 
        - !Ref securityGroup
      BlockDeviceMappings:
        - DeviceName: !Ref deviceName
          Ebs:
            VolumeType: !Ref volumeType
            VolumeSize: !Ref volumeSize
            DeleteOnTermination:  true          
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            cd /root/

            # https://stackoverflow.com/questions/33370297/apt-get-update-non-interactive
            export DEBIAN_FRONTEND=noninteractive   
            
            apt-get update            
            # https://docs.aws.amazon.com/systems-manager/latest/userguide/agent-install-ubuntu.html#agent-install-ubuntu-tabs
            
            apt-get install -q -y python-setuptools wget tmux unzip tar curl sed
            # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/releasehistory-aws-cfn-bootstrap.html#releasehistory-aws-cfn-bootstrap-v1
            wget -nv https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-1.4-34.tar.gz
            tar -xvzf ./aws-cfn-bootstrap-1.4-34.tar.gz
            cd aws-cfn-bootstrap-1.4
            python2 setup.py build
            python2 setup.py install

            # cfn-init
            python2 /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region} -c setup

            # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-prereq.html
            systemctl isolate multi-user.target

            apt-get -q -y install ubuntu-desktop 
            apt-get -q -y install gdm3

            apt-get -q -y install pulseaudio-utils
            # resolve "/var/lib/dpkg/info/nice-dcv-server.postinst: 8: dpkg-architecture: not found" when installing dcv-server
            apt-get -q -y install dpkg-dev

            sed -i "s/^#WaylandEnable=false/WaylandEnable=false/g" /etc/gdm3/custom.conf

            # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-server.html
            wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY
            gpg --import NICE-GPG-KEY

            # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-server.html#linux-server-install
            if ((uname -a | grep x86 1>/dev/null) && (cat /etc/os-release | grep 22.04 1>/dev/null)); then
              wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-x86_64.tgz
              tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
            elif ((uname -a | grep x86 1>/dev/null) && (cat /etc/os-release | grep 18.04 1>/dev/null)); then
              wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu1804-x86_64.tgz
              tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64
            elif (cat /etc/os-release | grep 18.04 1>/dev/null); then
              wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu1804-aarch64.tgz
              tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-aarch64
            else
              wget -nv https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2004-x86_64.tgz
              tar -xvzf nice-dcv-ubuntu*.tgz && cd nice-dcv-*-x86_64  
            fi                           
            apt-get -q -y install ./nice-dcv-server_*.deb
            apt-get -q -y install ./nice-dcv-web-viewer_*.deb
            usermod -aG video dcv 
            apt-get -q -y install ./nice-xdcv_*.deb 

            # https://docs.aws.amazon.com/dcv/latest/adminguide/enable-quic.html
            cp /etc/dcv/dcv.conf /etc/dcv/dcv.conf.org
            sed -i '/^\[connectivity/a enable-quic-frontend=true' /etc/dcv/dcv.conf

            # session storage: https://docs.aws.amazon.com/dcv/latest/userguide/using-transfer.html
            mkdir -p /home/ubuntu/DCV-Storage
            chown -R ubuntu:ubuntu /home/ubuntu/DCV-Storage

            # https://docs.aws.amazon.com/dcv/latest/adminguide/managing-sessions-start.html#managing-sessions-start-manual
            cat << EoF > /etc/systemd/system/dcv-virtual-session.service
            [Unit]
            Description=Create DCV virtual session for user ubuntu
            After=default.target network.target 

            [Service]
            ExecStart=/opt/dcv-virtual-session.sh 

            [Install]
            WantedBy=default.target
            EoF

            cat << EoF > /opt/dcv-virtual-session.sh
            #!/bin/bash
            dcvUser=ubuntu
            while true;
            do
              if (/usr/bin/dcv list-sessions | grep \$dcvUser 1>/dev/null)
              then
                sleep 5
              else
                /usr/bin/dcv create-session \$dcvUser --owner \$dcvUser --storage-root /home/\$dcvUser/DCV-Storage
                /usr/bin/dcv list-sessions
              fi
            done
            EoF
            chmod +x /opt/dcv-virtual-session.sh

            cd /root/
            apt-get -y autoremove
            # https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
            if (uname -a | grep x86 1>/dev/null); then
              curl -s https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            else
              curl -s https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip -o awscliv2.zip
            fi
            unzip -q -o awscliv2.zip
            ./aws/install -b /usr/bin
            echo "export AWS_CLI_AUTO_PROMPT=on-partial" >> /home/ubuntu/.bashrc

            # text console: DCV virtual sessions only
            systemctl isolate multi-user.target
            systemctl set-default multi-user.target
            
            systemctl daemon-reload
            systemctl enable --now dcvserver dcv-virtual-session.service          

            # cfn-init completed so signal success or not
            python2 /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region}        
      Tags:
        - Key: Name
          Value: !Ref ec2Name
        - Key: StackName
          Value: !Sub ${AWS::StackName}
        - Key: StackId
          Value: !Sub ${AWS::StackId}

Outputs:
  InstanceID:
    Description: EC2 Instance ID
    Value: !Ref ec2Instance
 
  PublicIP:
    Description: EC2 Public IP
    Value: !GetAtt ec2Instance.PublicIp

  SSMsessionManager:
    Description: SSM Session Manager login ("sudo passwd ubuntu" to change password)
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/systems-manager/session-manager/${ec2Instance}"

  DCVwebConsole:
    Description: DCV web console (login as ubuntu)
    Value: !Sub "https://${ec2Instance.PublicIp}:8443"
    
  DCVdownload:
    Description: DCV client download
    Value: https://download.nice-dcv.com
